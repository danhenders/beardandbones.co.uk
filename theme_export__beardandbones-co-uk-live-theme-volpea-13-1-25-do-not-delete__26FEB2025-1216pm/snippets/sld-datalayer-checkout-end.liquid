<script>
  (() => { 
    if (!window.__SldIsGtmSuiteCalled) {
      window.__SldIsGtmSuiteCalled = true;
      const init = () => {
  window.__SldDataLayerQueue = [];
  window.__SldListenerQueue = [];
  if (!window.dataLayer) window.dataLayer = [];
};
      init();
      window.__SldTransformItem = event => {
  if (typeof window.SldTransformFn === "function") {
    try {
      const result = window.SldTransformFn(event);
      if (typeof result === "object" && !Array.isArray(result) && result !== null) {
        return result;
      } else {
        console.error("Sld Data Layer: `window.SldTransformFn` returned a value " + "that wasn't an object, so we've treated things as if this " + "function wasn't defined.");
        return event;
      }
    } catch (error) {
      console.error("Sld Data Layer: `window.SldTransformFn` threw an error, so " + "we've treated things as if this function wasn't defined. The " + "exact error is shown below.");
      console.error(error);
      return event;
    }
  } else {
    return event;
  }
};
      window.SldPushToDataLayer = item => {
  const date = new Date();
  localStorage.setItem("___SLD_GTM_SUITE--lastDlPushTimestamp", String(Math.floor(date.getTime() / 1000)));
  const enrichedItem = {
    event_id: window.crypto.randomUUID ? window.crypto.randomUUID() : String(Math.random()).replace("0.", ""),
    event_time: date.toISOString(),
    ...item
  };
  const transformedEnrichedItem = window.__SldTransformItem ? window.__SldTransformItem(enrichedItem) : enrichedItem;
  const payload = {
    raw: enrichedItem,
    transformed: transformedEnrichedItem
  };
  if (transformedEnrichedItem._sld_internal?.isSldContextPush) {
    window.__SldIsContextSet = true;
    window.__SldDataLayerQueue.unshift(payload);
    window.__SldListenerQueue.unshift(payload);
  } else {
    window.__SldDataLayerQueue.push(payload);
    window.__SldListenerQueue.push(payload);
  }
  window.dispatchEvent(new CustomEvent("sld-listener-notify"));
  if (window.__SldIsContextSet) {
    while (window.__SldDataLayerQueue.length > 0) {
      const event = window.__SldDataLayerQueue.shift().transformed;
      window.dataLayer.push(event);
    }
  }
};

      const configElement = document.getElementById("sld-gtm-suite-config");

      if (!configElement) {
        console.error("Sld: DL Config element not found");
        return;
      }

      const config = JSON.parse(configElement.textContent);

      const script = document.createElement("script");
      script.type = "text/javascript";
      script.src = config.gtm_suite_script;
      script.async = false;
      script.defer = true;

      script.onerror = () => {
        console.error("Sld: DL JS script failed to load");
      };
      script.onload = async () => {
        if (!window.SldGtmSuite) {
          console.error("Sld: `SldGtmSuite` is not defined");
          return;
        }

        window.SldGtmSuite.utils.emailCapture();

        const cartData = {
  attributes: {{- cart.attributes | json -}},
  cartTotal: "{{- cart.total_price | times: 0.01 | json -}}",
  currencyCode: {{- cart.currency.iso_code | json -}},
  items: [
    {%- for line_item in cart.items -%}
      {
        {%- if line_item.sku != blank -%}
          id: {{- line_item.sku | json -}},
        {%- else -%}
          id: "{{- line_item.product_id | json -}}",
        {%- endif -%}
        name: {{- line_item.product.title | json -}},
        brand: {{- line_item.vendor | json -}},
        category: {{- line_item.product.type | json -}},
        variant: {{- line_item.variant.title | json -}},
        price: "{{- line_item.final_price | times: 0.01 | json -}}",
        position: {{- forloop.index -}},
        quantity: "{{- line_item.quantity | json -}}",
        productId: "{{- line_item.product_id | json -}}",
        variantId: "{{- line_item.variant_id -}}",
        compareAtPrice: "{{- line_item.variant.compare_at_price | times: 0.01 | json -}}",
        image: "{{- line_item.image | image_url -}}"
      },
    {%- endfor -%}
  ]
}
;

        await window.SldGtmSuite.handlers.cartAttributesReconcile(
          cartData,
          config.event_config.save_order_notes,
          config.consent_enabled,
          config.apex_domain
        );

        if (config.event_config.user) {
          const data = {
  {%- if checkout -%}
    cartTotal: "{{- checkout.total_price | times: 0.01 | json -}}",
    currencyCode: {{- checkout.currency | json -}},
  {%- else -%}
    cartTotal: "{{- cart.total_price | times: 0.01 | json -}}",
    currencyCode: {{- cart.currency.iso_code | json -}},
  {%- endif -%}
  {%- if customer -%}
    customer: {
      id: "{{- customer.id | json -}}",
      email: {{- customer.email | json -}},
      firstName: {{- customer.first_name | json -}},
      lastName: {{- customer.last_name | json -}},
      phone: {{- customer.phone | json -}},
      city: {{- customer.default_address.city | json -}},
      zip: {{- customer.default_address.zip | json -}},
      address1: {{- customer.default_address.address1 | json -}},
      address2: {{- customer.default_address.address2 | json -}},
      country: {{- customer.default_address.country | json -}},
      countryCode: {{- customer.default_address.country_code | json -}},
      province: {{- customer.default_address.province | json -}},
      provinceCode: {{- customer.default_address.province_code | json -}},
      tags: {{- customer.tags | join: ', ' | json -}}
    }
  {%- endif -%}
};
          window.SldGtmSuite.handlers.user(data);
        }

        {%- if checkout -%}
        {%- if request.path contains "thank_you" or request.path contains "thank-you" -%}
        if (config.event_config.checkout_complete) {
          const data = {%- if checkout -%}
  {
    currencyCode: {{- checkout.currency | json -}},
    actionField: {
      {%- if checkout.order_id -%}
        id: {{- checkout.order_id | json -}},
      {%- else -%}
        id: {{- checkout.id | json -}},
      {%- endif -%}
      {%- if checkout.order_name -%}
        order_name: {{- checkout.order_name | json -}},
      {%- endif -%}
      affiliation: {{- shop.name | json -}},
      revenue: "{{- checkout.total_price | times: 0.01 | json -}}",
      tax: "{{- checkout.tax_price | times: 0.01 | json -}}",
      shipping: "{{- checkout.shipping_price | times: 0.01 | json -}}",
      {%- if checkout.discount_applications -%}
        coupon: {{- checkout.discount_applications[0].title | json -}},
      {%- endif -%}
      {%- if order.subtotal_price -%}
        subTotal: "{{- order.subtotal_price | times: 0.01 | json -}}",
      {%- elsif checkout.subtotal_price -%}
        subTotal: "{{- checkout.subtotal_price | times: 0.01 | json -}}",
      {%- endif -%}
      productSubTotal: "{{- checkout.line_items_subtotal_price | times: 0.01 | json -}}",
      discountAmount: "{{- checkout.discounts_amount | times: 0.01 | json -}}"
    },
    {%- if checkout.customer -%}
      customer: {
        id: "{{- checkout.customer.id | json -}}",
        email: {{- checkout.email | json -}},
        firstName: {{- checkout.billing_address.first_name | json -}},
        lastName: {{- checkout.billing_address.last_name | json -}},
        {%- if checkout.customer.phone -%}
          phone: {{- checkout.customer.phone | json -}},
        {%- elsif checkout.billing_address.phone -%}
          phone: {{- checkout.billing_address.phone | json -}},
        {%- else -%}
          phone: {{- checkout.shipping_address.phone | json -}},
        {%- endif -%}
        city: {{- checkout.billing_address.city | json -}},
        zip: {{- checkout.billing_address.zip | json -}},
        address1: {{- checkout.billing_address.address1 | json -}},
        address2: {{- checkout.billing_address.address2 | json -}},
        country: {{- checkout.billing_address.country | json -}},
        countryCode: {{- checkout.billing_address.country_code | json -}},
        province: {{- checkout.billing_address.province | json -}},
        provinceCode: {{- checkout.billing_address.province_code | json -}},
        tags: {{- checkout.customer.tags | json -}}
      },
    {%- endif -%}
    items: [
      {%- for line_item in checkout.line_items -%}
        {
          {%- if line_item.sku != blank -%}
            id: {{- line_item.sku | json -}},
          {%- else -%}
            id: "{{- line_item.product_id | json -}}",
          {%- endif -%}
          name: {{- line_item.product.title | json -}},
          brand: {{- line_item.vendor | json -}},
          category: {{- line_item.product.type | json -}},
          variant: {{- line_item.variant.title | json -}},
          price: "{{- line_item.final_price | times: 0.01 | json -}}",
          quantity: "{{- line_item.quantity | json -}}",
          productId: "{{- line_item.product_id | json -}}",
          variantId: "{{- line_item.variant_id -}}",
          image: "{{- line_item.image | image_url -}}"
        },
      {%- endfor -%}
    ],
    landingSite: {{- checkout.landing_site | json -}}
  }
{%- endif -%}
;
          window.SldGtmSuite.handlers.checkoutComplete(data);
        }
        {%- else -%}
        {%- unless request.path contains "orders" -%}
        const data = {%- if checkout -%}
  {
    currencyCode: {{- checkout.currency | json -}},
    items: [
      {%- for line_item in checkout.line_items -%}
        {
          {%- if line_item.sku != blank -%}
            id: {{- line_item.sku | json -}},
          {%- else -%}
            id: "{{- line_item.product_id | json -}}",
          {%- endif -%}
          name: {{- line_item.product.title | json -}},
          brand: {{- line_item.vendor | json -}},
          category: {{- line_item.product.type | json -}},
          variant: {{- line_item.variant.title | json -}},
          price: "{{- line_item.final_price | times: 0.01 | json -}}",
          quantity: "{{- line_item.quantity | json -}}",
          productId: "{{- line_item.product_id | json -}}",
          variantId: "{{- line_item.variant_id -}}",
          compareAtPrice: "{{- line_item.variant.compare_at_price | times: 0.01 | json -}}",
          image: "{{- line_item.image | image_url -}}"
        },
      {%- endfor -%}
    ]
  }
{%- endif -%}
;
        if (config.event_config.cart_reconcile) {
          window.SldGtmSuite.handlers.cartItemsReconcile(data);
        }
        if (config.event_config.checkout_step) {
          window.SldGtmSuite.handlers.checkoutStep(data);
        }
        {%- endunless -%}
        {%- endif -%}
        {%- endif -%}
      };

      document.head.appendChild(script);
    }
  })();
</script>
<!-- Google Tag Manager (noscript) -->
<noscript><iframe src="https://server.beardandbones.co.uk/ns.html?id=GTM-TG96WFB" height="0" width="0" style="display:none;visibility:hidden"></iframe></noscript>
<!-- End Google Tag Manager (noscript) -->